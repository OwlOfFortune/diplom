#ifndef DIPLOMA_MKA_INTERFACE_H
#define DIPLOMA_MKA_INTERFACE_H

#include "common_args.h"
#include "hello_time.h"
#include "key_server.h"

/* ----------------------------------------------------------------------------------------------- */
/*! Создание потоков

    @param mka_common_args - структура с общими параметрами

    @return 0 - успех, 1 - ошибка
*/
/* ----------------------------------------------------------------------------------------------- */
int start_mka_connection(mka_common_args *commonArgs);

/* ----------------------------------------------------------------------------------------------- */
/*! Остановка потоков, закрытие всех соединений и очистка данных

    @param commonArgs - структура с общими параметрами

    @return 0 - успех, 1 - ошибка
*/
/* ----------------------------------------------------------------------------------------------- */
int stop_mka_connection(mka_common_args *commonArgs);

/* ----------------------------------------------------------------------------------------------- */
/*! Добавление интерфейса и соединения в структуру с массивом подключений

    @param commonArgs       - структура с общими параметрами
    @param interface        - название интерфейса
    @param interface_len    - длина интерфейса

    @return  0 - успех, 1 - ошибка
*/
/* ----------------------------------------------------------------------------------------------- */
int mka_add_interface(mka_common_args *commonArgs, char *interface, int interface_len);

/* ----------------------------------------------------------------------------------------------- */
/*! Ф-ия, передаваемая в поток для получения mka соощений

    @param args - mka_common_args - структура с общими параметрами

*/
/* ----------------------------------------------------------------------------------------------- */
void *recv_mka_msg(void *args);

/* ----------------------------------------------------------------------------------------------- */
/*! Ф-ия для получения номера параметра соединения в массиве парамераметров соединений для текущего
 * потока по дескриптору

    @param connectionParamsList - указатель на структуру с данными о параметрах соединения
    @param t - дескриптор потока

    @return  Порядковый номер соединения
*/
/* ----------------------------------------------------------------------------------------------- */
int get_interface_num_to_listen(connection_params_list *connectionParamsList, pthread_t t);


#endif //DIPLOMA_MKA_INTERFACE_H
